<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="forecastPic1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>